<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="AdDao.dao">
	
	<select id="getAdList" resultType="com.mao.test.webdata.vo.AdVo" parameterType="map">
		select a.ad_id as adId, a.title,u.nick_name as author,a.add_time as addTime,
		case a.`status` when '1' then '已发布' else '未发布' end as `status` 
		from app_ad a left join web_admin_user u on a.author_id=u.login_name
		order by add_time desc limit #{offset},#{size}
	</select>
	<select id="countAd" resultType="long">
		select count(*) from app_ad
	</select>
	
	<insert id="saveAd" parameterType="com.mao.test.webdata.vo.AdVo">
	insert into app_ad(ad_id,title,author_id,cover,content,`status`,add_time,release_time,
	operatetype,winestoreaddr) values(#{adId},#{title},#{author},#{cover},#{content},
	#{status},#{addTime},#{releaseTime},#{operatorType},#{wineStoreAddr})
	</insert>
	

	
	<insert id="updateAdVersion" parameterType="com.mao.test.entity.AdVersion">
		insert into
		app_ad_version(action,add_time,ad_id)
		values(#{action},#{addTime},#{adId})
	</insert>

	<select id="getAdById" resultType="com.mao.test.webdata.vo.AdVo"
		parameterType="String">
		select a.ad_id as adId,a.title,u.nick_name as
		author,a.add_time as addTime ,
		a.`status` as `status`,
		a.cover,a.content,a.operatetype as operateType,a.winestoreaddr as
		wineStoreAddr
		from app_ad a left join web_admin_user u on a.author_id = u.login_name
		where a.ad_id=#{adId}
	</select>

	<delete id="deleteAd" parameterType="String">
		delete from app_ad where ad_id=#{adId}
	</delete>
	<update id="updateAd" parameterType="com.mao.test.webdata.vo.AdVo">
		update app_ad
		set title=#{title},cover=#{cover},content=#{content},`status`=#{status},
		release_time=#{releaseTime},operatetype=#{operatorType},
		winestoreaddr=#{wineStoreAddr}
		 where ad_id=#{adId}
	</update>
</mapper>